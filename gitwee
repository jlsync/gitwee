#!/usr/bin/env ruby 

require 'rubygems'
require 'twitter'
require 'grit'
include Grit


src_dir = ARGV[0]
branch = "origin/stable"
TWITTER_CONSUMER_KEY = "key........"
TWITTER_CONSUMER_SECRET = "secret......"
TWITTER_OAUTH_TOKEN = "token......"
TWITTER_OAUTH_TOKEN_SECRET = "tokent_secret....."

history_limit = 20 # 200 max

repo = Repo.new(src_dir)

oauth = Twitter::OAuth.new(TWITTER_CONSUMER_KEY , TWITTER_CONSUMER_SECRET)
oauth.authorize_from_access(TWITTER_OAUTH_TOKEN , TWITTER_OAUTH_TOKEN_SECRET)
client = Twitter::Base.new(oauth)
timeline = client.user_timeline(:count => history_limit)

last_sha = ""
# first find the most recent commit message
timeline.each do |message|
  if matchdata = message.text.match(/^(\w{7}) /)
    last_sha = matchdata[1]
    break
  end
end

puts "last sha found on twitter: #{last_sha}"


new_commits = []
repo.commits(branch, history_limit).each do |commit|
  break if commit.id_abbrev == last_sha
  new_commits << commit
end

# oldest newest update first
new_commits.reverse.each do |commit|

  unless commit.message.match(/Merge branch '\w+' into \w+/)
    mesg = commit.id_abbrev + " " + commit.message[0,150].sub(/\n.*/m,"")
    if commit.message.size > 150
      mesg += "..."
    end
    puts "posting: #{mesg}"
  end

  client.update(mesg)
  sleep 1
end
